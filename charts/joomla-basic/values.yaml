# Default values for joomla-basic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
## Shared db name/user/password for Joomla and MySQL
##
global:
  ## JOOMLA_DB_NAME
  ##
  dbname: "joomla_db"
  ## JOOMLA_DB_USER / MYSQL_USER
  ##
  dbuser: "joomla"
  ## OOMLA_DB_PASSWORD / MYSQL_PASSWORD
  ##
  dbpassword: "dbpassword"
  ## JOOMLA_DB_HOST
  ##
  joomlaDbHost: "joomla-mysql"
  ## JOOMLA_DATABASE_PORT_NUMBER / MYSQL_TCP_PORT
  ##
  joomlaDbPort: "3306"
## Joomla image versions
## ref: https://hub.docker.com/_/joomla
##
image:
  repository: joomla
  tag: "php8.3-apache"
  ## Specify a imagePullPolicy. The default is 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
  ## 
  pullPolicy: IfNotPresent
## ## Partially override common.names.fullname template (will maintain the release name)
##
nameOverride: ""
## String to fully override common.names.fullname template
##
fullnameOverride: ""
## Deployment pod host aliases
## Ref.: https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
##
hostAliases:
  ## Necessary for apache-exporter to work
  ##
  - ip: "127.0.0.1"
    hostnames:
      - "status.localhost"
## Update strategy RollingUpdate, Recreate
## For RWO PVs, you may want to consider Recreate to ensure the PV is released before the Pod starts
## Will create downtime during upgrades
## Otherwise, you can use RollingUpdate which will keep the PV bound to the old pod until the new pod is running
##
updateStrategy:
  type: Recreate
## Eanble debug mode for joomla service port. Default is false
## If enabled, the test will be performed every interval seconds
##
debug: 
  enabled: true
  interval: 15
  retries: 3
## Enable persistence using Persistent Volume Claims
##
persistence:
  enabled: true
  ## storageClass PVC Storage Class for Joomla! volume
  ## accessModes PVC Access Mode for Joomla! volume
  ## Size PVC Storage Request for Joomla! volume
  ##
  storageClass: "local-path"
  accessModes: "ReadWriteOnce"
  size: 1Gi
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  existingClaim: ""
  ## If defined, the joomla-data volume will mount to the specified hostPath.
  ## Requires persistence.enabled: true
  ## Requires persistence.existingClaim: nil|false
  ## Default: nil.
  hostPath: ""
  annotations: {}
## Affinity for pod assignment
## preferred (soft) and required (hard) affinity
##
affinity:
  enabled: true
  preferred: true
  required: false
  #
  preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 10
      key: color
      operator: In
      values:
        - pink
    - weight: 20
      key: color
      operator: In
      values:
        - green
  requiredDuringSchedulingIgnoredDuringExecution:
    - key: color
      operator: In
      values:
        - green  
## nodeSelector Node labels for pod assignment
## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
##
nodeSelector: {}       
## Tolerations for pod assignment
##
tolerationsEnabled: true
tolerations:
  - key: "key1"
    operator: "Equal"
    value: "gray"
    effect: "NoSchedule"
  - key: "key1"
    operator: "Equal"
    value: "orange"
    effect: "NoSchedule"
#### Set container requests and limits for resources
##
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
## Configure Pods Security Context
##
podSecurityContext:
  enabled: true
  fsGroupChangePolicy: Always
  sysctls: []
  supplementalGroups: []
  fsGroup: 1001  
## Configure Container Security Context
##
containerSecurityContext:
  enabled: true
  seLinuxOptions: {}
  runAsUser: 1001
  runAsGroup: 0
  runAsNonRoot: true
  privileged: false
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: "RuntimeDefault"
## This is to setup the liveness and readiness probes
## Ref.: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
##
startupProbe:
  enabled: false
  initialDelaySeconds: 600
  periodSeconds: 15
  timeoutSeconds: 5
  successThreshold: 6
  failureThreshold: 1
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
##
readinessProbe:
  enabled: false
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 6
  successThreshold: 1
## This is for setting Kubernetes Annotations to a Pod.
## Ref.: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
##
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# Ref.: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
##
podLabels: {}
## This is for setting up a service
## Ref.: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:
  ## This sets the service type: LoadBalancer clusterIP
  type: LoadBalancer
  ## This sets the external port
  port: 80
  ## clusterIP for the Joomla Service
  #clusterIP:
  ## loadBalancerIP for the Joomla Service
  loadBalancerIP: ""
## This block is for setting up the ingress
## Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false
## Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
##
## MySQL specific configuration
mysql:
  ## This sets the container image for MySQL
  image:
    repository: mysql
    tag: "8.0"
    pullPolicy: IfNotPresent
  ##
  auth:
    ## MYSQL_ROOT_PASS
    rootdbpassword: "bxJK8Q1wd9ZFeDO8bOKbQ9CN"
  ##
  ## Tiemzone
  timezone: "Europe/Copenhagen"
  ##
  persistence:
    storageClass: "local-path"
    accessModes: "ReadWriteOnce"
    size: 2Gi
  ##
  tolerationsEnabled: true
  tolerations:
    - key: "key1"
      operator: "Equal"
      value: "gray"
      effect: "NoSchedule"
    - key: "key1"
      operator: "Equal"
      value: "orange"
      effect: "NoSchedule"
  affinity:
    enabled: true
    preferred: true
    required: false
    #
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        key: color
        operator: In
        values:
          - pink
      - weight: 5
        key: color
        operator: In
        values:
          - green
    requiredDuringSchedulingIgnoredDuringExecution:
      - key: color
        operator: In
        values:
          - green
  livenessProbe:
    enabled: true
    initialDelaySeconds: 600
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 6
    successThreshold: 1
