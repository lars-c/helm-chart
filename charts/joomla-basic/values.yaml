# Default values for joomla-basic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Sahred db name/user/password between joomla and mysql
##
global:
  ## JOOMLA_DB_NAME
  dbname: "joomla_db"
  ## 
  dbuser: "joomla"
  ##
  ## OOMLA_DB_PASSWORD / MYSQL_ROOT_PASSWORD
  dbpassword: "dbpassword"
  ##
  ## JOOMLA_DB_HOST
  joomlaDbHost: "joomla-mysql"
  ##
  ## JOOMLA_DATABASE_PORT_NUMBER MYSQL_TCP_PORT
  joomlaDbPort: "3306"


# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: joomla
  tag: "php8.3-apache"
  pullPolicy: IfNotPresent
  ## Set to true if you would like to see extra information on logs
  ##
  debug: false

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""
##
## Joomla site name (skip with manual installation)
##
joomlaSitename: "joomla"
## Joomla admin user real name (skip with manual installation)
##
joomlaAdminName: "Joomla_admin_user_real_name"
##
## Joomla admin user name (skip with manual installation)
##
joomlaAdminUserame: "Joomla_admin_username"
##
## Joomla admin user password (skip with manual installation)
##
joomlaAdminPassword: "password"
## Admin user email
##
joomlaAdminEmail: "user@test.com"
## @param allowEmptyPassword Allow DB blank passwords
## 

persistence:
  enabled: "true"
  ## If defined, storageClassName: <storageClass>
  ##
  storageClass: "local-path"
  accessModes: "ReadWriteOnce"
  size: 1Gi
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  ##
  existingClaim: ""
  ## If defined, the joomla-data volume will mount to the specified hostPath.
  ## Requires persistence.enabled: true
  ## Requires persistence.existingClaim: nil|false
  ## Default: nil.
  ##
  hostPath: ""
  annotations: {}

# 416 This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

# 304
podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service
service:
  # This sets the service type: LoadBalancer clusterIP
  type: LoadBalancer
  # This sets the external port
  port: 80
  ##
  clusterIP:
  ## loadBalancerIP for the Joomla Service (optional, cloud specific)
  ##
  loadBalancerIP: "192.168.1.76"

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
## Enable startupProbe
## Initial delay seconds for startupProbe
## Period seconds for startupProbe
## Timeout seconds for startupProbe
## Failure threshold for startupProbe
## Success threshold for startupProbe
##
startupProbe:
  enabled: false
  initialDelaySeconds: 600
  periodSeconds: 20
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3
## Enable livenessProbe
## Initial delay seconds for livenessProbe
## Period seconds for livenessProbe
## Timeout seconds for livenessProbe
## Failure threshold for livenessProbe
## Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 600
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## Enable readinessProbe
## Initial delay seconds for readinessProbe
## Period seconds for readinessProbe
## Timeout seconds for readinessProbe
## Failure threshold for readinessProbe
## Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 6
  successThreshold: 1

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

mysql:
  ## This sets the container image for MySQL
  image:
    repository: mysql
    tag: "5.7"
    pullPolicy: IfNotPresent
  ##
  auth:
    ## MYSQL_ROOT_PASS
    rootdbpassword: "bxJK8Q1wd9ZFeDO8bOKbQ9CN"
  ## MySQL database port number is handled by the global.joomlaDbPort
  ##port: "3306"
  ##
  ## Tiemzone
  timezone: "Europe/Copenhagen"
  ##
  persistence:
    ## enabled: "true"
    ## If defined, storageClassName: <storageClass>
    ##
    storageClass: "local-path"
    ##
    accessModes: "ReadWriteOnce"
    size: 2Gi
    ## Requires persistence.enabled: true
    ## PVC must be created manually before volume will be bound
    ##
    ## existingClaim: ""
  
