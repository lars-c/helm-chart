---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: joomla
  labels:
    app: joomla
spec:
  selector:
    matchLabels:
      app: joomla
      tier: frontend
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: joomla
        tier: frontend
    spec:
      initContainers:
      - name: joomla-bootstrap
        image: joomla:php8.3-apache
        volumeMounts:
        - name: joomla-persistent-storage
          mountPath: /var/www/html
        - name: log-valume
          mountPath: /var/log
        command:
          - sh
          - -c
          - |
            echo "Copying Joomla files to /var/www/html" | tee -a /var/log/joomla-bootstrap.log
            if [ ! -f /var/www/html/index.php ]; then
              cp -rp /usr/src/joomla/* /var/www/html/
            fi
            echo "Joomla files copied to /var/www/html" | tee -a /var/log/joomla-bootstrap.log
      - name: mysql-check
        image: busibox
        volumeMounts:
        - name: log-valume
          mountPath: /var/log
        command:
          - sh
          - -c
          - |
            echo "(${date}) - Checking MySQL service port" | tee -a /var/log/mysql-check.log
            until nc -z -w 10 {{ .Values.global.joomlaDbHost }} {{ .Values.global.joomlaDbPort }}; do
              echo "(${date}) - MySQL service port is not ready yet" | tee -a /var/log/mysql-check.log
              sleep 5
            done
            echo "(${date}) - MySQL service port is ready" | tee -a /var/log/mysql-check.log
      containers:
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: joomla
        env:
        - name: JOOMLA_DB_HOST
          value: {{ include "common.dbhostname" . }}
        - name: JOOMLA_DB_NAME
          value: {{ include "common.dbname" . }}
        - name: JOOMLA_DB_USER
          value: {{ include "common.global.dbuser" . }}
        - name: JOOMLA_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: joomla-secret
              key: dbpassword
        ports:
        - containerPort: {{ include "joomla.service.port" . }}
          name: joomla
        {{- if .Values.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: /index.php
            port: joomla
          initialDelaySeconds: {{ .Values.startupProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.startupProbe.timeoutSeconds }}
          successThreshold: {{ .Values.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.startupProbe.failureThreshold }}
        {{- end }}
        {{- if .Values.livenessProbe.enabled }}
        livenessProbe:
            tcpSocket:
              port: joomla
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
        readinessProbe:
            httpGet:
              path: /index.php
              port: joomla
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
        {{- end }}
        volumeMounts:
        - name: joomla-persistent-storage
          mountPath: /var/www/html
      {{- if .Values.debug.enabled }}
      - image: busybox
        name: probe-logger
        command:
          - sh
          - -c
          - |
            while true; do
              success=0
              for i in {1..{{ .Values.debug.retries }}}; do
                if nc -z -w 10 joomla {{ .Values.service.port }}; then
                  echo "$(date) - Joomla service port successful!"
                  success=1
                  break
                fi
                sleep 1
              done

              if [ $success -eq 0 ]; then
                echo "$(date) - Joomla service port failed!"
              fi
              
              sleep {{ .Values.debug.interval }};
            done
        resources:
          limits:
            cpu: "10m"
            memory: "16Mi"      
      {{- end}}
      volumes:
      - name: joomla-persistent-storage
        persistentVolumeClaim:
          claimName: joomla-pv-claim
      - name: log-valume
        emptyDir:
          sizeLimit: "500Mi"
      {{- if .Values.tolerationsEnabled }}
      tolerations:
      {{- range .Values.tolerations }}
      - key: {{ .key }}
        operator: {{ .operator }}
        value: {{ .value }}
        effect: {{ .effect }}
      {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      {{- end }}
      {{- if .Values.affinity.enabled }}
      affinity:
        nodeAffinity:
          {{- if and .Values.affinity.preferred (not .Values.affinity.required) }}
          preferredDuringSchedulingIgnoredDuringExecution:
          {{- range .Values.affinity.preferredDuringSchedulingIgnoredDuringExecution }}
          - weight: {{ .weight }}
            preference:
              matchExpressions:
              - key: {{ .key }}
                operator: {{ .operator }}
                values:
                {{- range .values }}
                - {{ . }}
                {{- end }}
          {{- end }}
          {{- else if and .Values.affinity.required (not .Values.affinity.preferred) }}
          requiredDuringSchedulingIgnoredDuringExecution:
          {{- range .Values.affinity.requiredDuringSchedulingIgnoredDuringExecution }}
            nodeSelectorTerms:
              - matchExpressions:
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
          {{- end }}
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            {{- range .Values.affinity.preferredDuringSchedulingIgnoredDuringExecution }}
            - weight: {{ .weight }}
              preference:
                matchExpressions:
                - key: {{ .key }}
                  operator: {{ .operator }}
                  values:
                  {{- range .values }}
                  - {{ . }}
                  {{- end }}
            {{- end }}
          {{- end }}
      {{- end }}